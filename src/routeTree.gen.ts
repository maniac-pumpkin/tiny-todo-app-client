/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AppLayoutImport } from './routes/app/_layout'
import { Route as AppLayoutIndexImport } from './routes/app/_layout/index'
import { Route as AppLayoutUncompletedImport } from './routes/app/_layout/uncompleted'
import { Route as AppLayoutImportantImport } from './routes/app/_layout/important'
import { Route as AppLayoutCompletedImport } from './routes/app/_layout/completed'
import { Route as AppLayoutDirectoriesIndexImport } from './routes/app/_layout/directories.index'
import { Route as AppLayoutDirectoriesDirImport } from './routes/app/_layout/directories.$dir'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)

const AppLayoutIndexRoute = AppLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutUncompletedRoute = AppLayoutUncompletedImport.update({
  id: '/uncompleted',
  path: '/uncompleted',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutImportantRoute = AppLayoutImportantImport.update({
  id: '/important',
  path: '/important',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutCompletedRoute = AppLayoutCompletedImport.update({
  id: '/completed',
  path: '/completed',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutDirectoriesIndexRoute = AppLayoutDirectoriesIndexImport.update({
  id: '/directories/',
  path: '/directories/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutDirectoriesDirRoute = AppLayoutDirectoriesDirImport.update({
  id: '/directories/$dir',
  path: '/directories/$dir',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_layout': {
      id: '/app/_layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof AppRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/app/_layout/completed': {
      id: '/app/_layout/completed'
      path: '/completed'
      fullPath: '/app/completed'
      preLoaderRoute: typeof AppLayoutCompletedImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/important': {
      id: '/app/_layout/important'
      path: '/important'
      fullPath: '/app/important'
      preLoaderRoute: typeof AppLayoutImportantImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/uncompleted': {
      id: '/app/_layout/uncompleted'
      path: '/uncompleted'
      fullPath: '/app/uncompleted'
      preLoaderRoute: typeof AppLayoutUncompletedImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/': {
      id: '/app/_layout/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppLayoutIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/directories/$dir': {
      id: '/app/_layout/directories/$dir'
      path: '/directories/$dir'
      fullPath: '/app/directories/$dir'
      preLoaderRoute: typeof AppLayoutDirectoriesDirImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/directories/': {
      id: '/app/_layout/directories/'
      path: '/directories'
      fullPath: '/app/directories'
      preLoaderRoute: typeof AppLayoutDirectoriesIndexImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutCompletedRoute: typeof AppLayoutCompletedRoute
  AppLayoutImportantRoute: typeof AppLayoutImportantRoute
  AppLayoutUncompletedRoute: typeof AppLayoutUncompletedRoute
  AppLayoutIndexRoute: typeof AppLayoutIndexRoute
  AppLayoutDirectoriesDirRoute: typeof AppLayoutDirectoriesDirRoute
  AppLayoutDirectoriesIndexRoute: typeof AppLayoutDirectoriesIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutCompletedRoute: AppLayoutCompletedRoute,
  AppLayoutImportantRoute: AppLayoutImportantRoute,
  AppLayoutUncompletedRoute: AppLayoutUncompletedRoute,
  AppLayoutIndexRoute: AppLayoutIndexRoute,
  AppLayoutDirectoriesDirRoute: AppLayoutDirectoriesDirRoute,
  AppLayoutDirectoriesIndexRoute: AppLayoutDirectoriesIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AppRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/app/completed': typeof AppLayoutCompletedRoute
  '/app/important': typeof AppLayoutImportantRoute
  '/app/uncompleted': typeof AppLayoutUncompletedRoute
  '/app/': typeof AppLayoutIndexRoute
  '/app/directories/$dir': typeof AppLayoutDirectoriesDirRoute
  '/app/directories': typeof AppLayoutDirectoriesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutIndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/app/completed': typeof AppLayoutCompletedRoute
  '/app/important': typeof AppLayoutImportantRoute
  '/app/uncompleted': typeof AppLayoutUncompletedRoute
  '/app/directories/$dir': typeof AppLayoutDirectoriesDirRoute
  '/app/directories': typeof AppLayoutDirectoriesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/_layout': typeof AppLayoutRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/app/_layout/completed': typeof AppLayoutCompletedRoute
  '/app/_layout/important': typeof AppLayoutImportantRoute
  '/app/_layout/uncompleted': typeof AppLayoutUncompletedRoute
  '/app/_layout/': typeof AppLayoutIndexRoute
  '/app/_layout/directories/$dir': typeof AppLayoutDirectoriesDirRoute
  '/app/_layout/directories/': typeof AppLayoutDirectoriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/completed'
    | '/app/important'
    | '/app/uncompleted'
    | '/app/'
    | '/app/directories/$dir'
    | '/app/directories'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/completed'
    | '/app/important'
    | '/app/uncompleted'
    | '/app/directories/$dir'
    | '/app/directories'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/_layout'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/_layout/completed'
    | '/app/_layout/important'
    | '/app/_layout/uncompleted'
    | '/app/_layout/'
    | '/app/_layout/directories/$dir'
    | '/app/_layout/directories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth/sign-in",
        "/auth/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_layout"
      ]
    },
    "/app/_layout": {
      "filePath": "app/_layout.tsx",
      "parent": "/app",
      "children": [
        "/app/_layout/completed",
        "/app/_layout/important",
        "/app/_layout/uncompleted",
        "/app/_layout/",
        "/app/_layout/directories/$dir",
        "/app/_layout/directories/"
      ]
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/app/_layout/completed": {
      "filePath": "app/_layout/completed.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/important": {
      "filePath": "app/_layout/important.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/uncompleted": {
      "filePath": "app/_layout/uncompleted.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/": {
      "filePath": "app/_layout/index.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/directories/$dir": {
      "filePath": "app/_layout/directories.$dir.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/directories/": {
      "filePath": "app/_layout/directories.index.tsx",
      "parent": "/app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
